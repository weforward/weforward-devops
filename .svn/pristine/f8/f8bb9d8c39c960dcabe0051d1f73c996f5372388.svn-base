/**
 * Copyright (c) 2019,2020 honintech
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 */
package cn.weforward;

import javax.annotation.Resource;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;

import cn.weforward.alarm.AlarmService;
import cn.weforward.alarm.impl.AlarmServiceImpl;
import cn.weforward.common.util.TaskExecutor;
import cn.weforward.data.mongodb.persister.MongodbPersisterFactory;
import cn.weforward.data.persister.PersisterFactory;
import cn.weforward.data.persister.PersisterSet;
import cn.weforward.data.util.Flusher;

/**
 * devops配置
 * 
 * @author daibo
 *
 */
public class AlarmConfig {
	/** mongodb地址 */
	@Value("${mongodb.url}")
	protected String m_MongodbUrl;
	/** mongodb数据库名 */
	@Value("${mongodb.dbname}")
	protected String m_MongodbDbname;
	/** 任务执行器 */
	@Resource
	protected TaskExecutor taskExecutor;
	/** 持久器集合 */
	@Resource
	protected PersisterSet persisters;
	/** 服务器id */
	@Value("${weforward.serverid}")
	protected String m_ServerId;

	/** 持久类工厂 */
	@Bean
	PersisterFactory alarmPersisterFactroy(PersisterSet persister, Flusher flusher) {
		MongodbPersisterFactory ps = new MongodbPersisterFactory(m_MongodbUrl, m_MongodbDbname, persister);
		ps.setFlusher(flusher);
		ps.setServerId(m_ServerId);
		return ps;
	}

	/** 报警服务 */
	@Bean
	AlarmService alarmService(PersisterFactory alarmPersisterFactroy) {
		AlarmServiceImpl p = new AlarmServiceImpl(alarmPersisterFactroy);
		return p;
	}

}
